{"version":3,"file":"static/js/971.2d167405.chunk.js","mappings":"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","sources":["api/Common.js","api/SonarCloudAPI.js","components/Cards/MainCard.js","components/Cards/Skeleton/TotalIncomeCard.js","components/Cards/SmallCard.js","components/Cards/Skeleton/PopularCard.js","components/Row.js","components/Cards/E2ETestStatusCard.js","api/E2eStatus.js","components/Cards/Skeleton/LargeCard.js","components/Cards/LargeCard.js","pages/Dashboard.js","api/E2eGetTotalTest.js","store/jira.js","api/JiraAPI.js","store/selectors.js","../node_modules/@mui/icons-material/ThumbDown.js","../node_modules/@mui/icons-material/ThumbUpAlt.js"],"sourcesContent":["import axios from 'axios';\n\nconsole.log('API Key:', process.env.REACT_APP_API_KEY); // For debugging purposes\nconsole.log('SONAR_CLOUD Key: ', process.env.API_KEY); // For debugging purposes\nexport default axios.create({\n  baseURL: 'https://qa-dashboard-4gfp.onrender.com',\n  headers: {\n    'Content-type': 'application/json',\n    'API-Key': process.env.REACT_APP_API_KEY\n  }\n});\n","import commonAxios from './Common';\n\nexport async function getPullRequestData(project) {\n  try {\n    const req = await commonAxios.get(`/api/project_pull_requests/list?project=${project}`);\n    return req.data;\n  } catch (error) {\n    return generateErrorReturn(error);\n  }\n}\nexport async function getProjectStatusData(project) {\n  try {\n    const req = await commonAxios.get(`/api/qualitygates/project_status?projectKey=${project}`);\n    return req.data;\n  } catch (error) {\n    return generateErrorReturn(error);\n  }\n}\n","import { forwardRef } from 'react';\n\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\n\nconst headerSX = {\n  '& .MuiCardHeader-action': { mr: 0 }\n};\n\nconst MainCard = forwardRef(\n  (\n    {\n      border = true,\n      boxShadow,\n      children,\n      content = true,\n      contentClass = '',\n      contentSX = {},\n      darkTitle,\n      secondary,\n      shadow,\n      sx = {},\n      title,\n      ...others\n    },\n    ref\n  ) => {\n    const theme = useTheme();\n\n    return (\n      <Card\n        ref={ref}\n        {...others}\n        sx={{\n          border: border ? '1px solid' : 'none',\n          borderColor: theme.palette.primary[200] + 25,\n          ':hover': {\n            boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\n          },\n          ...sx\n        }}\n      >\n        {/* card header and action */}\n        {title && <CardHeader sx={headerSX} title={darkTitle ? <Typography variant=\"h3\">{title}</Typography> : title} action={secondary} />}\n\n        {/* content & header divider */}\n        {title && <Divider />}\n\n        {/* card content */}\n        {content && (\n          <CardContent sx={contentSX} className={contentClass}>\n            {children}\n          </CardContent>\n        )}\n        {!content && children}\n      </Card>\n    );\n  }\n);\n\nMainCard.propTypes = {\n  border: PropTypes.bool,\n  boxShadow: PropTypes.bool,\n  children: PropTypes.node,\n  content: PropTypes.bool,\n  contentClass: PropTypes.string,\n  contentSX: PropTypes.object,\n  darkTitle: PropTypes.bool,\n  secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n  shadow: PropTypes.string,\n  sx: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n","import { Card, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@mui/material';\n\nconst TotalIncomeCard = () => (\n  <Card sx={{ p: 2 }}>\n    <List sx={{ py: 0 }}>\n      <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n        <ListItemAvatar>\n          <Skeleton variant=\"rectangular\" width={44} height={44} />\n        </ListItemAvatar>\n        <ListItemText sx={{ py: 0 }} primary={<Skeleton variant=\"rectangular\" height={20} />} secondary={<Skeleton variant=\"text\" />} />\n      </ListItem>\n    </List>\n  </Card>\n);\n\nexport default TotalIncomeCard;\n","import { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\nimport { styled, useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\n\nimport MainCard from 'components/Cards/MainCard';\nimport TotalIncomeCard from 'components/Cards/Skeleton/TotalIncomeCard';\n\nconst CardWrapper = styled(MainCard)(({ theme, backgroundColor }) => ({\n  backgroundColor: backgroundColor && theme.palette[backgroundColor]?.dark,\n  color: backgroundColor && theme.palette[backgroundColor]?.light,\n  overflow: 'hidden',\n  position: 'relative',\n  '&:after': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: `linear-gradient(210.04deg, ${\n      backgroundColor ? theme.palette[backgroundColor][200] : theme.palette.warning.dark\n    } -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n    borderRadius: '50%',\n    top: -30,\n    right: -180\n  },\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: `linear-gradient(140.9deg, ${\n      backgroundColor ? theme.palette[backgroundColor][200] : theme.palette.warning.dark\n    } -14.02%, rgba(144, 202, 249, 0) 77.58%)`,\n    borderRadius: '50%',\n    top: -160,\n    right: -130\n  }\n}));\n\nconst SmallCard = ({ isLoading, title, subtitle, result, icon, backgroundColor }) => {\n  const theme = useTheme();\n  const resultColor = (backgroundColor, result) => {\n    if (result === 'OK') {\n      return theme.palette.success.main;\n    } else if (result === 'ERROR') {\n      return theme.palette.orange.dark;\n    } else if (backgroundColor) {\n      return '#fff';\n    } else {\n      return 'black';\n    }\n  };\n  return (\n    <>\n      {isLoading || String(title).includes('undefined') || String(result).includes('undefined') ? (\n        <TotalIncomeCard />\n      ) : (\n        <CardWrapper border={false} content={false} backgroundColor={backgroundColor} sx={{ boxShadow: theme.shadows[10] }}>\n          <Box sx={{ p: 2 }}>\n            <List sx={{ py: 0 }}>\n              <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                <ListItemAvatar>\n                  <Avatar\n                    variant=\"rounded\"\n                    sx={{\n                      ...theme.typography.commonAvatar,\n                      ...theme.typography.largeAvatar,\n                      backgroundColor: backgroundColor ? theme.palette[backgroundColor][800] : theme.palette.warning.light,\n                      color: backgroundColor ? '#fff' : theme.palette.warning.dark\n                    }}\n                  >\n                    {icon}\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  sx={{\n                    py: 0,\n                    mt: 0.45,\n                    mb: 0.45\n                  }}\n                  primary={\n                    <Typography variant=\"h4\" sx={{ color: backgroundColor && '#fff' }}>\n                      {title}\n                    </Typography>\n                  }\n                  secondary={\n                    <Typography variant=\"subtitle2\" sx={{ color: backgroundColor ? 'primary.light' : theme.palette.grey[500], mt: 0.25 }}>\n                      {subtitle}\n                    </Typography>\n                  }\n                />\n                <Typography variant=\"h2\" sx={{ color: resultColor(backgroundColor, result) }}>\n                  {result}\n                </Typography>\n              </ListItem>\n            </List>\n          </Box>\n        </CardWrapper>\n      )}\n    </>\n  );\n};\n\nSmallCard.propTypes = {\n  isLoading: PropTypes.bool,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  result: PropTypes.string,\n  icon: PropTypes.node,\n  backgroundColor: PropTypes.string\n};\n\nexport default SmallCard;\n","import { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\nimport { gridSpacing } from 'store/constant';\n\nconst PopularCard = () => (\n  <Card>\n    <CardContent>\n      <Grid container spacing={gridSpacing}>\n        <Grid item xs={12}>\n          <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n            <Grid item xs zeroMinWidth>\n              <Skeleton variant=\"rectangular\" height={20} />\n            </Grid>\n            <Grid item>\n              <Skeleton variant=\"rectangular\" height={20} width={20} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Skeleton variant=\"rectangular\" height={150} />\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                <Grid item xs={6}>\n                  <Skeleton variant=\"rectangular\" height={20} />\n                </Grid>\n                <Grid item xs={6}>\n                  <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                    <Grid item xs zeroMinWidth>\n                      <Skeleton variant=\"rectangular\" height={20} />\n                    </Grid>\n                    <Grid item>\n                      <Skeleton variant=\"rectangular\" height={16} width={16} />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={6}>\n              <Skeleton variant=\"rectangular\" height={20} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                <Grid item xs={6}>\n                  <Skeleton variant=\"rectangular\" height={20} />\n                </Grid>\n                <Grid item xs={6}>\n                  <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                    <Grid item xs zeroMinWidth>\n                      <Skeleton variant=\"rectangular\" height={20} />\n                    </Grid>\n                    <Grid item>\n                      <Skeleton variant=\"rectangular\" height={16} width={16} />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={6}>\n              <Skeleton variant=\"rectangular\" height={20} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                <Grid item xs={6}>\n                  <Skeleton variant=\"rectangular\" height={20} />\n                </Grid>\n                <Grid item xs={6}>\n                  <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                    <Grid item xs zeroMinWidth>\n                      <Skeleton variant=\"rectangular\" height={20} />\n                    </Grid>\n                    <Grid item>\n                      <Skeleton variant=\"rectangular\" height={16} width={16} />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={6}>\n              <Skeleton variant=\"rectangular\" height={20} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                <Grid item xs={6}>\n                  <Skeleton variant=\"rectangular\" height={20} />\n                </Grid>\n                <Grid item xs={6}>\n                  <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                    <Grid item xs zeroMinWidth>\n                      <Skeleton variant=\"rectangular\" height={20} />\n                    </Grid>\n                    <Grid item>\n                      <Skeleton variant=\"rectangular\" height={16} width={16} />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={6}>\n              <Skeleton variant=\"rectangular\" height={20} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                <Grid item xs={6}>\n                  <Skeleton variant=\"rectangular\" height={20} />\n                </Grid>\n                <Grid item xs={6}>\n                  <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                    <Grid item xs zeroMinWidth>\n                      <Skeleton variant=\"rectangular\" height={20} />\n                    </Grid>\n                    <Grid item>\n                      <Skeleton variant=\"rectangular\" height={16} width={16} />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={6}>\n              <Skeleton variant=\"rectangular\" height={20} />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </CardContent>\n    <CardContent sx={{ p: 1.25, display: 'flex', pt: 0, justifyContent: 'center' }}>\n      <Skeleton variant=\"rectangular\" height={25} width={75} />\n    </CardContent>\n  </Card>\n);\n\nexport default PopularCard;\n","import ThumbDownIcon from '@mui/icons-material/ThumbDown';\nimport ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';\nimport { Avatar, Grid, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nconst Row = ({ title, data }) => {\n  const theme = useTheme();\n\n  if (!data) {\n    return null;\n  }\n  const { status, result } = data;\n  return (\n    <Grid container direction=\"column\">\n      <Grid item>\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n          <Grid item>\n            <Typography variant=\"subtitle1\" color=\"inherit\">\n              {title}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n              <Grid item>\n                <Typography variant=\"subtitle1\" color=\"inherit\">\n                  {status.toUpperCase()}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Avatar\n                  variant=\"rounded\"\n                  sx={{\n                    width: 24,\n                    height: 24,\n                    borderRadius: '5px',\n                    backgroundColor: status === 'pass' ? theme.palette.success.light : theme.palette.orange.light,\n                    color: status === 'pass' ? theme.palette.success.dark : theme.palette.orange.dark,\n                    ml: 2\n                  }}\n                >\n                  {status === 'pass' ? (\n                    <ThumbUpAltIcon fontSize=\"small\" color=\"inherit\" />\n                  ) : (\n                    <ThumbDownIcon fontSize=\"small\" color=\"inherit\" />\n                  )}\n                </Avatar>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Typography variant=\"subtitle2\" sx={{ color: status === 'pass' ? 'success.dark' : theme.palette.orange.dark }}>\n          {result}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nRow.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.object\n};\n\nexport default Row;\n","import { useEffect, useState } from 'react';\n\nimport { CardContent, Divider, Grid, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\n\nimport MainCard from 'components/Cards/MainCard';\nimport SkeletonPopularCard from 'components/Cards/Skeleton/PopularCard';\nimport Row from 'components/Row';\nimport { gridSpacing } from 'store/constant';\n\nimport { getStatus } from '../../api/E2eStatus';\n\nconst E2ETestStatusCard = ({ isLoading }) => {\n  const [data, setData] = useState([]);\n  const [isDataLoading, setIsDataLoading] = useState(true);\n  const theme = useTheme();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await getStatus();\n        setData(result);\n        setIsDataLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsDataLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {isLoading || isDataLoading || data.identity_service === undefined ? (\n        <SkeletonPopularCard />\n      ) : (\n        <MainCard content={false} sx={{ boxShadow: theme.shadows[10] }}>\n          <CardContent>\n            <Grid container spacing={gridSpacing}>\n              <Grid item xs={12}>\n                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                  <Grid item>\n                    <Typography variant=\"h4\">E2E Test Status</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                {data.identity_service !== null && <Row title=\"Identity Service\" data={data.identity_service} />}\n                <Divider sx={{ my: 1.5 }} />\n                {data.disaster_recovery !== null && <Row title=\"Disaster Recovery\" data={data.disaster_recovery} />}\n                <Divider sx={{ my: 1.5 }} />\n                {data.ledger_support_tool !== null && <Row title=\"Ledger Support Tool\" data={data.ledger_support_tool} />}\n                <Divider sx={{ my: 1.5 }} />\n                {data.recovery_as_a_service !== null && <Row title=\"Recovery As A Service\" data={data.recovery_as_a_service} />}\n                <Divider sx={{ my: 1.5 }} />\n                {data.transaction_protection !== null && <Row title=\"Transaction Protection\" data={data.transaction_protection} />}\n                <Divider sx={{ my: 1.5 }} />\n                {data.transaction_protection !== null && <Row title=\"Secure Data Service\" data={data.secure_data_service} />}\n                <Divider sx={{ my: 1.5 }} />\n              </Grid>\n            </Grid>\n          </CardContent>\n        </MainCard>\n      )}\n    </>\n  );\n};\n\nE2ETestStatusCard.propTypes = {\n  isLoading: PropTypes.bool\n};\n\nexport default E2ETestStatusCard;\n","import commonAxios from './Common';\n\nexport async function getStatus() {\n  try {\n    const req = await commonAxios.get('/e2e/status');\n    return req.data;\n  } catch (error) {\n    return generateErrorReturn(error);\n  }\n}\n","import { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\nconst LargeCard = () => (\n  <Card>\n    <CardContent>\n      <Grid container direction=\"column\">\n        <Grid item>\n          <Grid container justifyContent=\"space-between\">\n            <Grid item>\n              <Skeleton variant=\"rectangular\" width={44} height={44} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\n        </Grid>\n        <Grid item>\n          <Skeleton variant=\"rectangular\" height={30} />\n        </Grid>\n      </Grid>\n    </CardContent>\n  </Card>\n);\n\nexport default LargeCard;\n","import { Avatar, Box, Grid, Typography } from '@mui/material';\nimport { styled, useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\n\nimport MainCard from 'components/Cards/MainCard';\nimport SkeletonEarningCard from 'components/Cards/Skeleton/LargeCard';\n// import EarningIcon from 'assets/images/icons/earning.svg';\n// import MoreHorizIcon from '@mui/icons-material/MoreHoriz';\n// import ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\n// import GetAppTwoToneIcon from '@mui/icons-material/GetAppOutlined';\n// import FileCopyTwoToneIcon from '@mui/icons-material/FileCopyOutlined';\n// import PictureAsPdfTwoToneIcon from '@mui/icons-material/PictureAsPdfOutlined';\n// import ArchiveTwoToneIcon from '@mui/icons-material/ArchiveOutlined';\n\nconst CardWrapper = styled(MainCard)(({ theme, backgroundColor }) => ({\n  backgroundColor: theme.palette[backgroundColor].dark,\n  color: '#fff',\n  overflow: 'hidden',\n  position: 'relative',\n  '&:after': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: theme.palette[backgroundColor][800],\n    borderRadius: '50%',\n    top: -85,\n    right: -95,\n    [theme.breakpoints.down('sm')]: {\n      top: -105,\n      right: -140\n    }\n  },\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: theme.palette[backgroundColor][800],\n    borderRadius: '50%',\n    top: -125,\n    right: -15,\n    opacity: 0.5,\n    [theme.breakpoints.down('sm')]: {\n      top: -155,\n      right: -70\n    }\n  }\n}));\n\nconst LargeCard = ({ isLoading, title, subtitle, icon, backgroundColor }) => {\n  const theme = useTheme();\n  const Icon = icon;\n\n  return (\n    <>\n      {isLoading || String(title).includes('undefined') ? (\n        <SkeletonEarningCard />\n      ) : (\n        <CardWrapper border={false} content={false} backgroundColor={backgroundColor} sx={{ boxShadow: theme.shadows[10] }}>\n          <Box sx={{ p: 2.25 }}>\n            <Grid container direction=\"column\">\n              <Grid item>\n                <Grid container justifyContent=\"space-between\">\n                  <Grid item>\n                    <Avatar\n                      variant=\"rounded\"\n                      sx={{\n                        ...theme.typography.commonAvatar,\n                        ...theme.typography.largeAvatar,\n                        backgroundColor: theme.palette[backgroundColor][800],\n                        mt: 1\n                      }}\n                    >\n                      {typeof Icon === 'string' ? (\n                        <img src={icon} alt=\"Notification\" />\n                      ) : (\n                        <Icon stroke={1.5} size=\"1.3rem\" color=\"#ffffff\" />\n                      )}\n                    </Avatar>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container alignItems=\"center\">\n                  <Grid item>\n                    <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>{title}</Typography>\n                  </Grid>\n                  {/* <Grid item>\n                    <Avatar\n                      sx={{\n                        cursor: 'pointer',\n                        ...theme.typography.smallAvatar,\n                        backgroundColor: theme.palette.secondary[200],\n                        color: theme.palette.secondary.dark\n                      }}\n                    >\n                      <ArrowUpwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\n                    </Avatar>\n                  </Grid> */}\n                </Grid>\n              </Grid>\n              <Grid item sx={{ mb: 1.25 }}>\n                <Typography\n                  sx={{\n                    fontSize: '1rem',\n                    fontWeight: 500,\n                    color: theme.palette[backgroundColor][200]\n                  }}\n                >\n                  {subtitle}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n        </CardWrapper>\n      )}\n    </>\n  );\n};\n\nLargeCard.propTypes = {\n  isLoading: PropTypes.bool,\n  title: PropTypes.string,\n  value: PropTypes.string,\n  subtitle: PropTypes.string,\n  icon: PropTypes.node,\n  backgroundColor: PropTypes.string\n};\n\nexport default LargeCard;\n","import { useEffect, useState } from 'react';\n\nimport FingerprintIcon from '@mui/icons-material/Fingerprint';\nimport SupportIcon from '@mui/icons-material/Support';\nimport { Grid } from '@mui/material';\nimport { IconBug, IconHeadphones, IconShieldLock, IconTicket } from '@tabler/icons';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import { OverviewTraffic } from 'components/Charts/PieChat';\n// import TotalOrderLineChartCard from '../components/Cards/TotalOrderLineChartCard';\n// import TotalGrowthBarChart from '../components/Cards/TotalGrowthBarChart';\nimport { gridSpacing } from 'store/constant';\n\nimport { getE2eTotalTest } from '../api/E2eGetTotalTest';\n// import BajajAreaChartCard from '../components/Cards/BajajAreaChartCard';\nimport { getProjectStatusData } from '../api/SonarCloudAPI';\nimport PopularCard from '../components/Cards/E2ETestStatusCard';\nimport LargeCard from '../components/Cards/LargeCard';\nimport SmallCard from '../components/Cards/SmallCard';\nimport { retrieveJiraData } from '../store/jira';\nimport { getJiraBugData, getJiraDefectData, getJiraSecurityData } from '../store/selectors';\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n\n  const jiraBugData = useSelector(getJiraBugData);\n  const jiraDefectData = useSelector(getJiraDefectData);\n  const jiraSecurityData = useSelector(getJiraSecurityData);\n\n  const [bug, setBug] = useState(jiraBugData);\n  const [defect, setDefect] = useState(jiraDefectData);\n  const [security, setSecurity] = useState(jiraSecurityData);\n\n  const [data, setData] = useState([]);\n  const [b2b2cSonarCloudStatusData, setB2b2cSonarCloudStatusData] = useState([]);\n  const [txmSonarCloudStatusData, setTxmSonarCloudStatusData] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(false);\n    const fetchData = async () => {\n      try {\n        const result = await getE2eTotalTest();\n\n        if (!jiraBugData || jiraBugData.length === 0) {\n          setBug(await dispatch(retrieveJiraData('bug')));\n        }\n        if (!jiraDefectData || jiraDefectData.length === 0) {\n          setDefect(await dispatch(retrieveJiraData('customer defect')));\n        }\n\n        if (!jiraSecurityData || jiraSecurityData.length === 0) {\n          setSecurity(await dispatch(retrieveJiraData('security issue')));\n        }\n\n        const b2b2cSonarCloudStatus = await getProjectStatusData('coincover_coincover-b2b2c');\n        const txmSonarCloudStatus = await getProjectStatusData('coincover_coincover-txm');\n\n        setData(result);\n\n        setB2b2cSonarCloudStatusData(b2b2cSonarCloudStatus);\n        setTxmSonarCloudStatusData(txmSonarCloudStatus);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [dispatch, jiraBugData, jiraDefectData, jiraSecurityData]);\n\n  return (\n    <Grid container spacing={gridSpacing}>\n      <Grid item xs={12}>\n        <Grid container>\n          <Grid item lg={4} md={6} sm={12} xs={12}>\n            <Grid sx={{ padding: '8px' }}>\n              <LargeCard\n                isLoading={isLoading}\n                title={data.totalTests}\n                subtitle=\"Total E2E Tests\"\n                icon={IconTicket}\n                backgroundColor=\"primary\"\n              />\n            </Grid>\n            <Grid sx={{ padding: '8px' }}>\n              <LargeCard\n                isLoading={isLoading}\n                title={`${bug?.total} Bugs`}\n                subtitle=\"Total Number of open Defects\"\n                icon={IconBug}\n                backgroundColor=\"secondary\"\n              />\n            </Grid>\n          </Grid>\n          <Grid item lg={4} md={6} sm={12} xs={12}>\n            <Grid sx={{ padding: '8px' }}>\n              <LargeCard\n                isLoading={isLoading}\n                title={`${defect?.total} Defects`}\n                subtitle=\"Total Number of open Defect\"\n                icon={IconHeadphones}\n                backgroundColor=\"secondary\"\n              />\n            </Grid>\n            <Grid sx={{ padding: '8px' }}>\n              <LargeCard\n                isLoading={isLoading}\n                title={`${security?.total} Security Issue`}\n                subtitle=\"Total Number of open Security Issues\"\n                icon={IconShieldLock}\n                backgroundColor=\"primary\"\n              />\n            </Grid>\n          </Grid>\n          <Grid item lg={4} md={6} sm={12} xs={12}>\n            {/* <Grid sx={{ padding: '8px' }}>\n              <OverviewTraffic\n                chartSeries={[bug?.total, defect?.total, security?.total]}\n                labels={['Bugs', 'Defects', 'Security']}\n                sx={{ height: '100%' }}\n              />\n            </Grid> */}\n\n            <Grid sx={{ padding: '8px' }}>\n              <SmallCard\n                isLoading={isLoading}\n                title=\"coincover-b2b2c\"\n                subtitle=\"SonarCloud\"\n                result={b2b2cSonarCloudStatusData.projectStatus?.status}\n                icon={<FingerprintIcon fontSize=\"inherit\" />}\n              />\n            </Grid>\n            <Grid sx={{ padding: '8px' }}>\n              <SmallCard\n                isLoading={isLoading}\n                title=\"coincover-txm\"\n                subtitle=\"SonarCloud\"\n                result={txmSonarCloudStatusData.projectStatus?.status}\n                icon={<SupportIcon fontSize=\"inherit\" />}\n              />\n            </Grid>\n            <Grid sx={{ padding: '8px' }}>\n              <PopularCard isLoading={isLoading} />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Dashboard;\n","import commonAxios from './Common';\n\nexport async function getE2eTotalTest() {\n  try {\n    const req = await commonAxios.get('/e2e/totalTests');\n    return req.data;\n  } catch (error) {\n    return generateErrorReturn(error);\n  }\n}\n","import { getJira } from 'api/JiraAPI';\n\nimport { GET_JIRA } from './actions';\n\nexport const retrieveJiraData = (issueType) => async (dispatch, getState) => {\n  const jiraData = getState().jiraReducer[issueType];\n\n  if (!jiraData || jiraData.length === 0) {\n    try {\n      const res = await getJira(issueType);\n      dispatch({\n        type: GET_JIRA,\n        payload: {\n          issueType,\n          data: res\n        }\n      });\n      return res;\n    } catch (err) {\n      console.error('Error retrieving Jira data:', err);\n      throw err;\n    }\n  }\n\n  return jiraData;\n};\n","import commonAxios from './Common';\n\nexport async function getJira(issueType) {\n  try {\n    const req = await commonAxios.get(`/rest/api/2/search?jql=project=PRODENG AND type=\"${issueType}\" AND status not in (Done)`);\n    return req.data;\n  } catch (error) {\n    console.error('Error fetching Jira data:', error);\n    throw error;\n  }\n}\n","import { createSelector } from 'reselect';\n\nconst jiraReducerSelector = (state) => state.jiraReducer;\nconst unitReducerSelector = (state) => state.unitReducer;\nconst e2eReducerSelector = (state) => state.e2eReducer;\n\nexport const getJiraBugData = createSelector([jiraReducerSelector], (jiraReducer) => jiraReducer.bugData);\nexport const getJiraDefectData = createSelector([jiraReducerSelector], (jiraReducer) => jiraReducer.defectData);\nexport const getJiraSecurityData = createSelector([jiraReducerSelector], (jiraReducer) => jiraReducer.securityData);\n\nexport const getProductUnitData = (issueType) => createSelector([unitReducerSelector], (unitReducer) => unitReducer[issueType]);\nexport const getProductE2EData = (issueType) => createSelector([e2eReducerSelector], (e2eReducer) => e2eReducer[issueType]);\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z\"\n}), 'ThumbDown');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2 20h2c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1H2v11zm19.83-7.12c.11-.25.17-.52.17-.8V11c0-1.1-.9-2-2-2h-5.5l.92-4.65c.05-.22.02-.46-.08-.66-.23-.45-.52-.86-.88-1.22L14 2 7.59 8.41C7.21 8.79 7 9.3 7 9.83v7.84C7 18.95 8.05 20 9.34 20h8.11c.7 0 1.36-.37 1.72-.97l2.66-6.15z\"\n}), 'ThumbUpAlt');\nexports.default = _default;"],"names":["console","log","process","REACT_APP_API_KEY","API_KEY","axios","create","baseURL","headers","async","getPullRequestData","project","commonAxios","get","data","error","generateErrorReturn","getProjectStatusData","headerSX","mr","MainCard","forwardRef","_ref","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","_jsxs","Card","borderColor","palette","primary","_jsx","CardHeader","Typography","variant","action","Divider","CardContent","className","TotalIncomeCard","p","List","py","ListItem","alignItems","disableGutters","ListItemAvatar","Skeleton","width","height","ListItemText","CardWrapper","styled","_theme$palette$backgr","_theme$palette$backgr2","backgroundColor","dark","color","light","overflow","position","background","warning","borderRadius","top","right","_ref2","isLoading","subtitle","result","icon","_Fragment","String","includes","shadows","Box","Avatar","typography","commonAvatar","largeAvatar","mt","mb","grey","resultColor","success","main","orange","PopularCard","Grid","container","spacing","gridSpacing","item","xs","justifyContent","zeroMinWidth","display","pt","status","direction","toUpperCase","ml","ThumbUpAltIcon","fontSize","ThumbDownIcon","setData","useState","isDataLoading","setIsDataLoading","useEffect","getStatus","fetchData","undefined","identity_service","SkeletonPopularCard","alignContent","Row","my","disaster_recovery","ledger_support_tool","recovery_as_a_service","transaction_protection","secure_data_service","LargeCard","breakpoints","down","opacity","Icon","SkeletonEarningCard","src","alt","stroke","size","fontWeight","Dashboard","_b2b2cSonarCloudStatu","_txmSonarCloudStatusD","dispatch","useDispatch","jiraBugData","useSelector","getJiraBugData","jiraDefectData","getJiraDefectData","jiraSecurityData","getJiraSecurityData","bug","setBug","defect","setDefect","security","setSecurity","b2b2cSonarCloudStatusData","setB2b2cSonarCloudStatusData","txmSonarCloudStatusData","setTxmSonarCloudStatusData","setLoading","getE2eTotalTest","length","retrieveJiraData","b2b2cSonarCloudStatus","txmSonarCloudStatus","lg","md","sm","padding","totalTests","IconTicket","total","IconBug","IconHeadphones","IconShieldLock","SmallCard","projectStatus","FingerprintIcon","SupportIcon","issueType","getState","jiraData","jiraReducer","res","getJira","type","GET_JIRA","payload","err","jiraReducerSelector","state","unitReducerSelector","unitReducer","e2eReducerSelector","e2eReducer","createSelector","bugData","defectData","securityData","getProductUnitData","getProductE2EData","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}