{"version":3,"file":"static/js/979.2602f6fe.chunk.js","mappings":"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","sources":["api/Common.js","components/Cards/MainCard.js","components/Tables/UnitTestDataTable.js","pages/Unit.js","store/product.js","api/UnitGetData.js","api/E2eGetData.js","store/selectors.js","utils/product-name-converter.js","../node_modules/@mui/icons-material/KeyboardArrowDown.js","../node_modules/@mui/icons-material/KeyboardArrowUp.js","../node_modules/@mui/icons-material/Minimize.js","../node_modules/@mui/icons-material/NorthEast.js","../node_modules/@mui/icons-material/SouthEast.js"],"sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://qa-dashboard-4gfp.onrender.com',\n  headers: {\n    'Content-type': 'application/json',\n    'API-Key': process.env.REACT_APP_API_KEY\n  }\n});\n","import { forwardRef } from 'react';\n\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\n\nconst headerSX = {\n  '& .MuiCardHeader-action': { mr: 0 }\n};\n\nconst MainCard = forwardRef(\n  (\n    {\n      border = true,\n      boxShadow,\n      children,\n      content = true,\n      contentClass = '',\n      contentSX = {},\n      darkTitle,\n      secondary,\n      shadow,\n      sx = {},\n      title,\n      ...others\n    },\n    ref\n  ) => {\n    const theme = useTheme();\n\n    return (\n      <Card\n        ref={ref}\n        {...others}\n        sx={{\n          border: border ? '1px solid' : 'none',\n          borderColor: theme.palette.primary[200] + 25,\n          ':hover': {\n            boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\n          },\n          ...sx\n        }}\n      >\n        {/* card header and action */}\n        {title && <CardHeader sx={headerSX} title={darkTitle ? <Typography variant=\"h3\">{title}</Typography> : title} action={secondary} />}\n\n        {/* content & header divider */}\n        {title && <Divider />}\n\n        {/* card content */}\n        {content && (\n          <CardContent sx={contentSX} className={contentClass}>\n            {children}\n          </CardContent>\n        )}\n        {!content && children}\n      </Card>\n    );\n  }\n);\n\nMainCard.propTypes = {\n  border: PropTypes.bool,\n  boxShadow: PropTypes.bool,\n  children: PropTypes.node,\n  content: PropTypes.bool,\n  contentClass: PropTypes.string,\n  contentSX: PropTypes.object,\n  darkTitle: PropTypes.bool,\n  secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n  shadow: PropTypes.string,\n  sx: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n","import React, { useState } from 'react';\n\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport MinimizeIcon from '@mui/icons-material/Minimize';\nimport NorthEastIcon from '@mui/icons-material/NorthEast';\nimport SouthEastIcon from '@mui/icons-material/SouthEast';\nimport {\n  Avatar,\n  Box,\n  Chip,\n  Collapse,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  Typography\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport * as moment from 'moment';\nimport PropTypes from 'prop-types';\n\nimport MainCard from 'components/Cards/MainCard';\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const lastResult = row.result[row.result.length - 1];\n  const fillColour = (value) => {\n    const numericValue = parseFloat(value);\n    if (numericValue >= 90 && numericValue <= 100) {\n      return 'success';\n    } else if (numericValue >= 80 && numericValue < 90) {\n      return 'warning';\n    } else {\n      return 'error';\n    }\n  };\n  function getStatusChange(data) {\n    if (!data.result || data.result.length < 2) {\n      return <MinimizeIcon />;\n    }\n\n    const lastResult = data.result[data.result.length - 1];\n    const secondLastResult = data.result[data.result.length - 2];\n\n    if (!lastResult || !secondLastResult) {\n      return 'Result data missing';\n    }\n\n    const lastPercentage = parseFloat(lastResult.percentage);\n    const secondLastPercentage = parseFloat(secondLastResult.percentage);\n\n    if (isNaN(lastPercentage) || isNaN(secondLastPercentage)) {\n      return <MinimizeIcon />;\n    }\n\n    if (lastPercentage > secondLastPercentage) {\n      return <NorthEastIcon />;\n    } else if (lastPercentage < secondLastPercentage) {\n      return <SouthEastIcon />;\n    } else {\n      return <MinimizeIcon />;\n    }\n  }\n  const handleRowClick = (rowData, selected) => {\n    window.open(`https://github.com/coincover/coincover-b2b2c/pull/${selected}`, '_blank');\n  };\n\n  return (\n    <React.Fragment>\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {moment(lastResult.date).format('DD/MM/YYYY h:mm:ss')}\n        </TableCell>\n        <TableCell\n          align=\"right\"\n          onClick={() => handleRowClick(historyRow, row.pull_request)}\n          hover\n          style={{ cursor: 'pointer', textDecoration: 'underline' }}\n        >\n          {row.pull_request}\n        </TableCell>\n        <TableCell>\n          <Tooltip title={lastResult.author || 'Not assigned'}>\n            <Avatar alt={lastResult.author} src={`https://ui-avatars.com/api/?name=${lastResult.author}&background=random&?bold=true`} />\n          </Tooltip>\n        </TableCell>\n        <TableCell>{lastResult.commit}</TableCell>\n        <TableCell align=\"right\">\n          <Chip\n            label={`${lastResult.percentage}%`}\n            color={fillColour(lastResult.percentage)}\n            variant=\"combined\"\n            sx={{ borderRadius: '5px', width: '100%' }}\n          />\n          {getStatusChange(row)}\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                History\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Author</TableCell>\n                    <TableCell align=\"right\">Commit</TableCell>\n                    <TableCell align=\"right\">Function Coverage</TableCell>\n                    <TableCell align=\"right\">Line Coverage</TableCell>\n                    <TableCell align=\"right\">Statement Coverage</TableCell>\n                    <TableCell align=\"right\">Overall Coverage</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.result.map((historyRow) => (\n                    <TableRow\n                      key={historyRow.date}\n                      onClick={() => handleRowClick(historyRow, row.pull_request)}\n                      hover\n                      style={{ cursor: 'pointer' }}\n                    >\n                      <TableCell component=\"th\" scope=\"row\">\n                        {moment(historyRow.date).format('DD/MM/YYYY h:mm:ss')}\n                      </TableCell>\n                      <TableCell>{historyRow.author}</TableCell>\n                      <TableCell align=\"right\">{historyRow.commit}</TableCell>\n                      <TableCell align=\"right\">\n                        <Chip\n                          label={`${historyRow.function_coverage}%`}\n                          color={fillColour(historyRow.function_coverage)}\n                          variant=\"combined\"\n                          sx={{ borderRadius: '5px', width: '100%' }}\n                        />\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Chip\n                          label={`${historyRow.line_coverage}%`}\n                          color={fillColour(historyRow.line_coverage)}\n                          variant=\"combined\"\n                          sx={{ borderRadius: '5px', width: '100%' }}\n                        />\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Chip\n                          label={`${historyRow.statement_coverage}%`}\n                          color={fillColour(historyRow.statement_coverage)}\n                          variant=\"combined\"\n                          sx={{ borderRadius: '5px', width: '100%' }}\n                        />\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Chip\n                          label={`${historyRow.percentage}%`}\n                          color={fillColour(historyRow.percentage)}\n                          variant=\"combined\"\n                          sx={{ borderRadius: '5px', width: '100%' }}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    pull_request: PropTypes.string.isRequired,\n    result: PropTypes.arrayOf(\n      PropTypes.shape({\n        date: PropTypes.string.isRequired,\n        commit: PropTypes.string.isRequired,\n        percentage: PropTypes.string.isRequired,\n        statement_coverage: PropTypes.string.isRequired,\n        function_coverage: PropTypes.string.isRequired,\n        branch_coverage: PropTypes.string.isRequired,\n        line_coverage: PropTypes.string.isRequired,\n        author: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired\n};\n\nconst UnitTestDataTable = ({ isLoading, data }) => {\n  const theme = useTheme();\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  return (\n    <>\n      {!isLoading && data.length > 0 ? (\n        <TableContainer component={Paper}>\n          <Table aria-label=\"collapsible table\">\n            <TableHead>\n              <TableRow>\n                <TableCell />\n                <TableCell>Date</TableCell>\n                <TableCell align=\"right\">Pull Request</TableCell>\n                <TableCell>Author</TableCell>\n                <TableCell>Commit</TableCell>\n                <TableCell align=\"right\">Overall Coverage</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <Row key={row.id} row={row} />\n              ))}\n            </TableBody>\n          </Table>\n          <TablePagination\n            component=\"div\"\n            count={data.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </TableContainer>\n      ) : (\n        <MainCard sx={{ boxShadow: theme.shadows[6] }}>\n          <Typography sx={{ textAlign: 'center' }}>No Data</Typography>\n        </MainCard>\n      )}\n    </>\n  );\n};\n\nUnitTestDataTable.propTypes = {\n  isLoading: PropTypes.bool,\n  data: PropTypes.array\n};\n\nexport default UnitTestDataTable;\n","import { useEffect, useState } from 'react';\n\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import SmallCard from '../components/Cards/SmallCard';\nimport MainCard from 'components/Cards/MainCard';\nimport { gridSpacing } from 'store/constant';\n\nimport UnitTestDataTable from '../components/Tables/UnitTestDataTable';\nimport { retrieveUnitData } from '../store/product';\nimport { getProductUnitData } from '../store/selectors';\nimport { getApiByName } from '../utils/product-name-converter';\n\nconst UNIT = ({ title }) => {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n\n  const unitData = useSelector(getProductUnitData(getApiByName(title)));\n\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        if (!unitData) {\n          dispatch(retrieveUnitData(getApiByName(title)));\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [dispatch, unitData, title]);\n\n  return (\n    <MainCard title={`Unit Code Coverage: ${title}`} sx={{ boxShadow: theme.shadows[6] }}>\n      <Grid container spacing={gridSpacing}>\n        <Grid item xs={12}>\n          <Grid container spacing={gridSpacing}>\n            {/* <Grid item sm={6} xs={12} md={6} lg={4}>\n              <SmallCard\n                isLoading={isLoading}\n                title=\"Latest UNIT Run\"\n                subtitle=\"Status on the latest run\"\n                result={percentageData}\n                icon={<FingerprintIcon fontSize=\"inherit\" />}\n                backgroundColor=\"primary\"\n              />\n            </Grid>\n            <Grid item sm={6} xs={12} md={6} lg={4}>\n              <SmallCard\n                isLoading={isLoading}\n                title=\"Latest Unit Test Run\"\n                subtitle=\"Code Coverage\"\n                result=\"90%\"\n                icon={<FingerprintIcon fontSize=\"inherit\" />}\n                backgroundColor=\"secondary\"\n              />\n            </Grid>\n            <Grid item sm={6} xs={12} md={6} lg={4}>\n              <SmallCard\n                isLoading={isLoading}\n                title=\"Latest SonarQube Run\"\n                subtitle=\"Code Scan\"\n                result=\"90%\"\n                icon={<FingerprintIcon fontSize=\"inherit\" />}\n              />\n            </Grid> */}\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              {isLoading ? <div>Loading...</div> : <UnitTestDataTable data={unitData.data} />}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </MainCard>\n  );\n};\n\nUNIT.propTypes = {\n  title: PropTypes.string\n};\n\nexport default UNIT;\n","import { getE2EData } from 'api/E2eGetData';\nimport { getUnitData } from 'api/UnitGetData';\n\nimport { GET_E2E, GET_UNIT } from './actions';\n\nexport const retrieveUnitData = (issueType) => async (dispatch, getState) => {\n  const unitData = getState().unitReducer[issueType];\n  const currentTime = Date.now();\n\n  if (!unitData || unitData.length === 0 || currentTime - unitData.lastUpdated > 600000) {\n    try {\n      const res = await getUnitData(issueType);\n      dispatch({\n        type: GET_UNIT,\n        payload: {\n          issueType,\n          data: res,\n          lastUpdated: currentTime\n        }\n      });\n      return res;\n    } catch (err) {\n      console.error('Error retrieving data:', err);\n      throw err;\n    }\n  }\n\n  return unitData;\n};\n\nexport const retrieveE2EData = (issueType) => async (dispatch, getState) => {\n  const e2eData = getState().e2eReducer[issueType];\n  const currentTime = Date.now();\n\n  if (!e2eData.data || e2eData.data.length === 0 || currentTime - e2eData.lastUpdated > 600000) {\n    try {\n      const res = await getE2EData(issueType);\n      dispatch({\n        type: GET_E2E,\n        payload: {\n          issueType,\n          data: res,\n          lastUpdated: currentTime\n        }\n      });\n      return res;\n    } catch (err) {\n      console.error('Error retrieving data:', err);\n      throw err;\n    }\n  }\n\n  return e2eData;\n};\n","import commonAxios from './Common';\n\nexport async function getUnitData(endpoint) {\n  try {\n    const req = await commonAxios.get(`/unit/${endpoint}`);\n    return req.data;\n  } catch (error) {\n    return generateErrorReturn(error);\n  }\n}\n","import commonAxios from './Common';\n\nexport async function getE2EData(endpoint) {\n  try {\n    const req = await commonAxios.get(`/e2e/${endpoint}`);\n    return req.data;\n  } catch (error) {\n    return generateErrorReturn(error);\n  }\n}\n","import { createSelector } from 'reselect';\n\nconst jiraReducerSelector = (state) => state.jiraReducer;\nconst unitReducerSelector = (state) => state.unitReducer;\nconst e2eReducerSelector = (state) => state.e2eReducer;\n\nexport const getJiraBugData = createSelector([jiraReducerSelector], (jiraReducer) => jiraReducer.bugData);\nexport const getJiraDefectData = createSelector([jiraReducerSelector], (jiraReducer) => jiraReducer.defectData);\nexport const getJiraSecurityData = createSelector([jiraReducerSelector], (jiraReducer) => jiraReducer.securityData);\n\nexport const getProductUnitData = (issueType) => createSelector([unitReducerSelector], (unitReducer) => unitReducer[issueType]);\nexport const getProductE2EData = (issueType) => createSelector([e2eReducerSelector], (e2eReducer) => e2eReducer[issueType]);\n","import products from '../menu-items/product.json';\n\nexport function getSlugByName(name) {\n  const product = products.find((p) => p.name === name);\n  console.log(product);\n  return product ? product.slug : name;\n}\n\nexport function getApiByName(name) {\n  const product = products.find((p) => p.name === name);\n  console.log(product);\n  return product ? product.api : name;\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n}), 'KeyboardArrowDown');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19h12v2H6z\"\n}), 'Minimize');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 5v2h6.59L4 18.59 5.41 20 17 8.41V15h2V5H9z\"\n}), 'NorthEast');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 9h-2v6.59L5.41 4 4 5.41 15.59 17H9v2h10V9z\"\n}), 'SouthEast');\nexports.default = _default;"],"names":["axios","create","baseURL","headers","process","headerSX","mr","MainCard","forwardRef","_ref","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","_jsxs","Card","borderColor","palette","primary","_jsx","CardHeader","Typography","variant","action","Divider","CardContent","className","Row","props","row","open","setOpen","React","lastResult","result","length","fillColour","value","numericValue","parseFloat","handleRowClick","rowData","selected","window","TableRow","borderBottom","TableCell","IconButton","size","onClick","KeyboardArrowUpIcon","KeyboardArrowDownIcon","component","scope","moment","date","format","align","historyRow","pull_request","hover","style","cursor","textDecoration","Tooltip","author","Avatar","alt","src","commit","Chip","label","percentage","color","borderRadius","width","data","MinimizeIcon","secondLastResult","lastPercentage","secondLastPercentage","isNaN","NorthEastIcon","SouthEastIcon","getStatusChange","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","gutterBottom","Table","TableHead","TableBody","map","function_coverage","line_coverage","statement_coverage","isLoading","page","setPage","useState","rowsPerPage","setRowsPerPage","_Fragment","TableContainer","Paper","slice","id","TablePagination","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","target","shadows","textAlign","dispatch","useDispatch","unitData","useSelector","getProductUnitData","getApiByName","setLoading","useEffect","async","retrieveUnitData","error","console","fetchData","Grid","container","spacing","gridSpacing","item","xs","sm","md","lg","UnitTestDataTable","issueType","getState","unitReducer","currentTime","Date","now","lastUpdated","res","endpoint","commonAxios","get","generateErrorReturn","getUnitData","type","GET_UNIT","payload","err","retrieveE2EData","e2eData","e2eReducer","getE2EData","GET_E2E","jiraReducerSelector","state","jiraReducer","unitReducerSelector","e2eReducerSelector","getJiraBugData","createSelector","bugData","getJiraDefectData","defectData","getJiraSecurityData","securityData","getProductE2EData","getSlugByName","name","product","products","find","p","log","slug","api","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}