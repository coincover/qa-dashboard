{"version":3,"file":"static/js/548.57c2c1e3.chunk.js","mappings":"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","sources":["api/Common.js","components/Cards/MainCard.js","components/Cards/Skeleton/TotalIncomeCard.js","components/Cards/SmallCard.js","components/Tables/TestDataTable.js","pages/E2E.js","store/product.js","api/UnitGetData.js","api/E2eGetData.js","store/selectors.js","utils/product-name-converter.js"],"sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://qa-dashboard-4gfp.onrender.com',\n  headers: {\n    'Content-type': 'application/json',\n    'API-Key': process.env.REACT_APP_API_KEY\n  }\n});\n","import { forwardRef } from 'react';\n\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\n\nconst headerSX = {\n  '& .MuiCardHeader-action': { mr: 0 }\n};\n\nconst MainCard = forwardRef(\n  (\n    {\n      border = true,\n      boxShadow,\n      children,\n      content = true,\n      contentClass = '',\n      contentSX = {},\n      darkTitle,\n      secondary,\n      shadow,\n      sx = {},\n      title,\n      ...others\n    },\n    ref\n  ) => {\n    const theme = useTheme();\n\n    return (\n      <Card\n        ref={ref}\n        {...others}\n        sx={{\n          border: border ? '1px solid' : 'none',\n          borderColor: theme.palette.primary[200] + 25,\n          ':hover': {\n            boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\n          },\n          ...sx\n        }}\n      >\n        {/* card header and action */}\n        {title && <CardHeader sx={headerSX} title={darkTitle ? <Typography variant=\"h3\">{title}</Typography> : title} action={secondary} />}\n\n        {/* content & header divider */}\n        {title && <Divider />}\n\n        {/* card content */}\n        {content && (\n          <CardContent sx={contentSX} className={contentClass}>\n            {children}\n          </CardContent>\n        )}\n        {!content && children}\n      </Card>\n    );\n  }\n);\n\nMainCard.propTypes = {\n  border: PropTypes.bool,\n  boxShadow: PropTypes.bool,\n  children: PropTypes.node,\n  content: PropTypes.bool,\n  contentClass: PropTypes.string,\n  contentSX: PropTypes.object,\n  darkTitle: PropTypes.bool,\n  secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n  shadow: PropTypes.string,\n  sx: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n","import { Card, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@mui/material';\n\nconst TotalIncomeCard = () => (\n  <Card sx={{ p: 2 }}>\n    <List sx={{ py: 0 }}>\n      <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n        <ListItemAvatar>\n          <Skeleton variant=\"rectangular\" width={44} height={44} />\n        </ListItemAvatar>\n        <ListItemText sx={{ py: 0 }} primary={<Skeleton variant=\"rectangular\" height={20} />} secondary={<Skeleton variant=\"text\" />} />\n      </ListItem>\n    </List>\n  </Card>\n);\n\nexport default TotalIncomeCard;\n","import { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\nimport { styled, useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\n\nimport MainCard from 'components/Cards/MainCard';\nimport TotalIncomeCard from 'components/Cards/Skeleton/TotalIncomeCard';\n\nconst CardWrapper = styled(MainCard)(({ theme, backgroundColor }) => ({\n  backgroundColor: backgroundColor && theme.palette[backgroundColor]?.dark,\n  color: backgroundColor && theme.palette[backgroundColor]?.light,\n  overflow: 'hidden',\n  position: 'relative',\n  '&:after': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: `linear-gradient(210.04deg, ${\n      backgroundColor ? theme.palette[backgroundColor][200] : theme.palette.warning.dark\n    } -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n    borderRadius: '50%',\n    top: -30,\n    right: -180\n  },\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: `linear-gradient(140.9deg, ${\n      backgroundColor ? theme.palette[backgroundColor][200] : theme.palette.warning.dark\n    } -14.02%, rgba(144, 202, 249, 0) 77.58%)`,\n    borderRadius: '50%',\n    top: -160,\n    right: -130\n  }\n}));\n\nconst SmallCard = ({ isLoading, title, subtitle, result, icon, backgroundColor }) => {\n  const theme = useTheme();\n  const resultColor = (backgroundColor, result) => {\n    if (result === 'OK') {\n      return theme.palette.success.main;\n    } else if (result === 'ERROR') {\n      return theme.palette.orange.dark;\n    } else if (backgroundColor) {\n      return '#fff';\n    } else {\n      return 'black';\n    }\n  };\n  return (\n    <>\n      {isLoading || String(title).includes('undefined') || String(result).includes('undefined') ? (\n        <TotalIncomeCard />\n      ) : (\n        <CardWrapper border={false} content={false} backgroundColor={backgroundColor} sx={{ boxShadow: theme.shadows[10] }}>\n          <Box sx={{ p: 2 }}>\n            <List sx={{ py: 0 }}>\n              <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                <ListItemAvatar>\n                  <Avatar\n                    variant=\"rounded\"\n                    sx={{\n                      ...theme.typography.commonAvatar,\n                      ...theme.typography.largeAvatar,\n                      backgroundColor: backgroundColor ? theme.palette[backgroundColor][800] : theme.palette.warning.light,\n                      color: backgroundColor ? '#fff' : theme.palette.warning.dark\n                    }}\n                  >\n                    {icon}\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  sx={{\n                    py: 0,\n                    mt: 0.45,\n                    mb: 0.45\n                  }}\n                  primary={\n                    <Typography variant=\"h4\" sx={{ color: backgroundColor && '#fff' }}>\n                      {title}\n                    </Typography>\n                  }\n                  secondary={\n                    <Typography variant=\"subtitle2\" sx={{ color: backgroundColor ? 'primary.light' : theme.palette.grey[500], mt: 0.25 }}>\n                      {subtitle}\n                    </Typography>\n                  }\n                />\n                <Typography variant=\"h2\" sx={{ color: resultColor(backgroundColor, result) }}>\n                  {result}\n                </Typography>\n              </ListItem>\n            </List>\n          </Box>\n        </CardWrapper>\n      )}\n    </>\n  );\n};\n\nSmallCard.propTypes = {\n  isLoading: PropTypes.bool,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  result: PropTypes.string,\n  icon: PropTypes.node,\n  backgroundColor: PropTypes.string\n};\n\nexport default SmallCard;\n","import React, { useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport * as moment from 'moment';\nimport PropTypes from 'prop-types';\n\nimport { getSlugByName } from '../../utils/product-name-converter';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '80%',\n  height: 'auto',\n  overflowY: 'auto',\n  bgcolor: 'background.paper',\n  borderRadius: '8px',\n  boxShadow: 24,\n  p: 4\n};\nconst TestDataTable = ({ data }) => {\n  const [selectedRowData, setSelectedRowData] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleRowClick = (rowData) => {\n    setSelectedRowData(rowData);\n    setIsModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>Pass</TableCell>\n              <TableCell>Fail</TableCell>\n              <TableCell>Skip</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((d) => (\n              <TableRow key={d.id} onClick={() => handleRowClick(d)} hover style={{ cursor: 'pointer' }}>\n                <TableCell>{moment(d.date).format('DD/MM/YY')}</TableCell>\n                <TableCell>{d.pass}</TableCell>\n                <TableCell>{d.fail}</TableCell>\n                <TableCell>{d.skip}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      <Modal open={isModalOpen} onClose={handleModalClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h3\" component=\"h2\">\n            {selectedRowData?.title} Test Run at {moment(selectedRowData?.date).format('DD/MM/YY')}\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            <iframe\n              src={`https://coincover.github.io/coincover-amt/${getSlugByName(selectedRowData?.title)}/functional/${moment(\n                selectedRowData?.date\n              ).format('YYYY-MM-DD')}/index.html`}\n              title=\"Modal Iframe\"\n              width=\"100%\"\n              height=\"600px\"\n            ></iframe>\n          </Typography>\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n\nTestDataTable.propTypes = {\n  data: PropTypes.array\n};\n\nexport default TestDataTable;\n","// material-ui\nimport { useEffect, useState } from 'react';\n\nimport FingerprintIcon from '@mui/icons-material/Fingerprint';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// project imports\nimport MainCard from 'components/Cards/MainCard';\nimport { gridSpacing } from 'store/constant';\n\nimport SmallCard from '../components/Cards/SmallCard';\nimport TestDataTable from '../components/Tables/TestDataTable';\nimport { retrieveE2EData, retrieveUnitData } from '../store/product';\nimport { getProductE2EData, getProductUnitData } from '../store/selectors';\nimport { getApiByName } from '../utils/product-name-converter';\n\nconst E2E = ({ title }) => {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n\n  const unitData = useSelector(getProductUnitData(getApiByName(title)));\n  const e2eData = useSelector(getProductE2EData(getApiByName(title)));\n\n  const [isLoading, setLoading] = useState(true);\n\n  const [data, setData] = useState([]);\n  const [isUnitDataFetched, setUnitDataFetched] = useState('');\n  const [isE2EDataFetched, setE2EDataFetched] = useState('');\n\n  const getTestPercentage = (pass, fail, skip) => {\n    const totalTests = pass + fail + skip;\n    const passPercentage = (((pass + skip) / totalTests) * 100).toFixed(0);\n    const overallResult = isNaN(passPercentage) ? 'No Data' : `${passPercentage}% test pass`;\n    return overallResult;\n  };\n  const lastItem = data[data.length - 1];\n  const percentageData = getTestPercentage(lastItem?.pass, lastItem?.fail, lastItem?.skip);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n\n        if (isUnitDataFetched !== getApiByName(title)) {\n          await dispatch(retrieveUnitData(getApiByName(title)));\n          setUnitDataFetched(getApiByName(title));\n        }\n        if (isE2EDataFetched !== getApiByName(title)) {\n          await dispatch(retrieveE2EData(getApiByName(title)));\n          setE2EDataFetched(getApiByName(title));\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [dispatch, title, e2eData, isE2EDataFetched, isUnitDataFetched, unitData]);\n\n  useEffect(() => {\n    const modifiedData = e2eData.data.map((item) => ({ ...item, title }));\n    modifiedData.sort((a, b) => new Date(b.date) - new Date(a.date));\n    setData(modifiedData);\n  }, [e2eData, title]);\n\n  return (\n    <MainCard title={`E2E Test Result: ${title}`} sx={{ boxShadow: theme.shadows[6] }}>\n      <Grid container spacing={gridSpacing}>\n        <Grid item xs={12}>\n          <Grid container spacing={gridSpacing}>\n            <Grid item sm={6} xs={12} md={6} lg={4}>\n              <SmallCard\n                isLoading={isLoading}\n                title=\"Latest E2E Run\"\n                subtitle=\"Status on the latest run\"\n                result={percentageData}\n                icon={<FingerprintIcon fontSize=\"inherit\" />}\n                backgroundColor=\"primary\"\n              />\n            </Grid>\n            <Grid item sm={6} xs={12} md={6} lg={4}>\n              <SmallCard\n                isLoading={isLoading}\n                title=\"Latest Unit Test Run\"\n                subtitle=\"Code Coverage\"\n                result={unitData.data[0]?.result[0]?.percentage || 'No Data'}\n                icon={<FingerprintIcon fontSize=\"inherit\" />}\n                backgroundColor=\"secondary\"\n              />\n            </Grid>\n            <Grid item sm={6} xs={12} md={6} lg={4}>\n              <SmallCard\n                isLoading={isLoading}\n                title=\"Latest E2E Test Coverage Report\"\n                subtitle=\"Test Coverage\"\n                result=\"No Data\"\n                icon={<FingerprintIcon fontSize=\"inherit\" />}\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              {isLoading ? <div>Loading...</div> : <TestDataTable data={data} />}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </MainCard>\n  );\n};\n\nE2E.propTypes = {\n  title: PropTypes.string\n};\n\nexport default E2E;\n","import { getE2EData } from 'api/E2eGetData';\nimport { getUnitData } from 'api/UnitGetData';\n\nimport { GET_E2E, GET_UNIT } from './actions';\n\nexport const retrieveUnitData = (issueType) => async (dispatch, getState) => {\n  const unitData = getState().unitReducer[issueType];\n  const currentTime = Date.now();\n\n  if (!unitData || unitData.length === 0 || currentTime - unitData.lastUpdated > 600000) {\n    try {\n      const res = await getUnitData(issueType);\n      dispatch({\n        type: GET_UNIT,\n        payload: {\n          issueType,\n          data: res,\n          lastUpdated: currentTime\n        }\n      });\n      return res;\n    } catch (err) {\n      console.error('Error retrieving data:', err);\n      throw err;\n    }\n  }\n\n  return unitData;\n};\n\nexport const retrieveE2EData = (issueType) => async (dispatch, getState) => {\n  const e2eData = getState().e2eReducer[issueType];\n  const currentTime = Date.now();\n\n  if (!e2eData.data || e2eData.data.length === 0 || currentTime - e2eData.lastUpdated > 600000) {\n    try {\n      const res = await getE2EData(issueType);\n      dispatch({\n        type: GET_E2E,\n        payload: {\n          issueType,\n          data: res,\n          lastUpdated: currentTime\n        }\n      });\n      return res;\n    } catch (err) {\n      console.error('Error retrieving data:', err);\n      throw err;\n    }\n  }\n\n  return e2eData;\n};\n","import commonAxios from './Common';\n\nexport async function getUnitData(endpoint) {\n  try {\n    const req = await commonAxios.get(`/unit/${endpoint}`);\n    return req.data;\n  } catch (error) {\n    return generateErrorReturn(error);\n  }\n}\n","import commonAxios from './Common';\n\nexport async function getE2EData(endpoint) {\n  try {\n    const req = await commonAxios.get(`/e2e/${endpoint}`);\n    return req.data;\n  } catch (error) {\n    return generateErrorReturn(error);\n  }\n}\n","import { createSelector } from 'reselect';\n\nconst jiraReducerSelector = (state) => state.jiraReducer;\nconst unitReducerSelector = (state) => state.unitReducer;\nconst e2eReducerSelector = (state) => state.e2eReducer;\n\nexport const getJiraBugData = createSelector([jiraReducerSelector], (jiraReducer) => jiraReducer.bugData);\nexport const getJiraDefectData = createSelector([jiraReducerSelector], (jiraReducer) => jiraReducer.defectData);\nexport const getJiraSecurityData = createSelector([jiraReducerSelector], (jiraReducer) => jiraReducer.securityData);\n\nexport const getProductUnitData = (issueType) => createSelector([unitReducerSelector], (unitReducer) => unitReducer[issueType]);\nexport const getProductE2EData = (issueType) => createSelector([e2eReducerSelector], (e2eReducer) => e2eReducer[issueType]);\n","import products from '../menu-items/product.json';\n\nexport function getSlugByName(name) {\n  const product = products.find((p) => p.name === name);\n  console.log(product);\n  return product ? product.slug : name;\n}\n\nexport function getApiByName(name) {\n  const product = products.find((p) => p.name === name);\n  console.log(product);\n  return product ? product.api : name;\n}\n"],"names":["axios","create","baseURL","headers","process","headerSX","mr","MainCard","forwardRef","_ref","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","_jsxs","Card","borderColor","palette","primary","_jsx","CardHeader","Typography","variant","action","Divider","CardContent","className","TotalIncomeCard","p","List","py","ListItem","alignItems","disableGutters","ListItemAvatar","Skeleton","width","height","ListItemText","CardWrapper","styled","_theme$palette$backgr","_theme$palette$backgr2","backgroundColor","dark","color","light","overflow","position","background","warning","borderRadius","top","right","_ref2","isLoading","subtitle","result","icon","_Fragment","String","includes","shadows","Box","Avatar","typography","commonAvatar","largeAvatar","mt","mb","grey","resultColor","success","main","orange","style","left","transform","overflowY","bgcolor","data","selectedRowData","setSelectedRowData","useState","isModalOpen","setIsModalOpen","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","slice","map","d","onClick","hover","cursor","moment","date","format","pass","fail","skip","id","TablePagination","count","length","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","target","value","Modal","open","onClose","handleModalClose","src","getSlugByName","_unitData$data$","_unitData$data$$resul","dispatch","useDispatch","unitData","useSelector","getProductUnitData","getApiByName","e2eData","getProductE2EData","setLoading","setData","isUnitDataFetched","setUnitDataFetched","isE2EDataFetched","setE2EDataFetched","lastItem","percentageData","getTestPercentage","passPercentage","toFixed","isNaN","useEffect","async","retrieveUnitData","retrieveE2EData","error","console","fetchData","modifiedData","item","sort","a","b","Date","Grid","container","spacing","gridSpacing","xs","sm","md","lg","SmallCard","FingerprintIcon","fontSize","percentage","TestDataTable","issueType","getState","unitReducer","currentTime","now","lastUpdated","res","endpoint","commonAxios","get","generateErrorReturn","getUnitData","type","GET_UNIT","payload","err","e2eReducer","getE2EData","GET_E2E","jiraReducerSelector","state","jiraReducer","unitReducerSelector","e2eReducerSelector","getJiraBugData","createSelector","bugData","getJiraDefectData","defectData","getJiraSecurityData","securityData","name","product","products","find","log","slug","api"],"sourceRoot":""}